###INDICATOR BRAZILIAN REGIONS, REGION MEDIAN, URBAN OR RURAL
###THIS INDICATOR INCLUDES: RURAL OR URBAN AREAS; REGION MEDIAN; INCOME DECILES.

library("tidyverse")
library("Hmisc")
library("weights")
library("survey")

setwd("C:/Users/55219/Meu Drive/DOUTORADO PPE UFRJ/Transport Research Part D/GITHUB")
# Charging the base:
load(file = "Despesa_Individual.RData")
load(file = "Estratos_peso.RData")

require(dplyr)

### Setting and creating a personal and household ID: expense basis

despesa_ind$cod_upa=as.character(despesa_ind$cod_upa)
despesa_ind$estrato_pof=as.character(despesa_ind$estrato_pof)
despesa_ind$tipo_situacao_reg=as.character(despesa_ind$tipo_situacao_reg)
despesa_ind$num_dom=as.character(despesa_ind$num_dom)
despesa_ind$num_uc=as.character(despesa_ind$num_uc)
despesa_ind$cod_informante=as.character(despesa_ind$cod_informante)

despesa_ind <- despesa_ind %>%
  dplyr::mutate(DomicilioID = paste0(cod_upa, num_dom, num_uc, sep = ""))

despesa_ind <- despesa_ind %>% 
  select(DomicilioID,estrato_pof, cod_upa, cod_upa,renda_total,uf, deflator,peso,v9001,v9011,v8000_defla,fator_anualizacao,tipo_situacao_reg)

# Creating the annual transportation and gasoline expenditure and the annual household income.
base <- despesa_ind %>%
  filter(v9001 %in% c(2300801,2300701,2302301,2302302,2300101,2300201,2300301,
                      2300401,2300402,2300403,2300403,2300404,2300502,2303101,
                      2303102,2303201,2300601,2300602,2300409,2300901,2300902,
                      2300903,2300904,2300906,2300907,2300908,2300911,2301101,
                      2301201,2301301,2302801,2302901,2303001,2301401,2301501,
                      2301502,2301601,2301801)) %>% 
  mutate(gasto_transporte_pub = ifelse(is.na(v9011), 
                                       v8000_defla*fator_anualizacao, 
                                       v8000_defla*fator_anualizacao*v9011),
         renda_anual = ifelse(is.na(deflator),
                              renda_total*12,
                              renda_total*12*deflator))

# adding the total expenses on transportation and fuel and creating an ID that identifies household:

base=base %>% 
  group_by(DomicilioID) %>% 
  mutate(gasto_total = sum(gasto_transporte_pub, rm.na=T)) %>% 
  ungroup()


# Leaving only the information on the first line of the household in the database:
base =  dplyr::distinct(base,DomicilioID,.keep_all = TRUE)


#### Creating the regions variable:
base = base %>%
  mutate(regiao = case_when(
    uf >= 11 & uf <= 17 ~ "Norte", 
    uf >= 21 & uf <= 29 ~ "Nordeste",
    uf >= 31 & uf <= 35 ~ "Sudeste",
    uf >= 41 & uf <= 43 ~ "Sul",
    uf >= 50 & uf <= 53 ~ "Centro-oeste", 
    T ~ NA))

rm(despesa_ind)

# Create the variable (urban/rural)
# Here, we assume that there is a variable that distinguishes zone codes (e.g. 'zone_code')
# #Filter only "URBAN":
# 
 base <- base %>%
   mutate(
     tipo_situacao_reg = case_when(
       tipo_situacao_reg == 1 ~ "Urbano",  # If it is 1, it is "Urban"
       tipo_situacao_reg == 2 ~ "Rural",   # If it's 2, it's "Rural"
       TRUE ~ NA_character_                # Otherwise, assign NA
     )
   ) %>%
   filter(tipo_situacao_reg == "Urbano")  # Filters only "Urban" or "Rural" data


# Region filter: 

base_regiao = base %>% 
  filter(regiao == "Sul") # change regions

desenho_amostral <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_regiao,
    nest = TRUE
  )


decis <- svyquantile(~base_regiao$renda_anual, desenho_amostral, quantiles = seq(0.1, 1, by = 0.1))

base_regiao = base_regiao %>% 
  mutate(decil= case_when(
    renda_anual >= 0 & renda_anual <= decis[["base_regiao$renda_anual"]][1] ~ "1º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][1] & renda_anual <= decis[["base_regiao$renda_anual"]][2] ~ "2º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][2] & renda_anual <= decis[["base_regiao$renda_anual"]][3] ~ "3º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][3]  & renda_anual <= decis[["base_regiao$renda_anual"]][4] ~ "4º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][4]  & renda_anual <= decis[["base_regiao$renda_anual"]][5] ~ "5º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][5]  & renda_anual <= decis[["base_regiao$renda_anual"]][6] ~ "6º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][6]  & renda_anual <= decis[["base_regiao$renda_anual"]][7] ~ "7º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][7]  & renda_anual <= decis[["base_regiao$renda_anual"]][8] ~ "8º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][8]  & renda_anual <= decis[["base_regiao$renda_anual"]][9] ~ "9º Decil",
    renda_anual > decis[["base_regiao$renda_anual"]][9] ~ "10º Decil", 
    T ~ NA))

mediana_regiao=svyquantile(~base_regiao$gasto_total, desenho_amostral, quantiles = 0.5)


# Putting the bases together to get weight information

gc()
options(survey.lonely.psu = "adjust")


# Number of households with expenses
desenho_amostral$variables$Total = 1
tot_fam_geral=svytotal(~ Total, desenho_amostral)

# Households with spending lower than the M/2
base_regiao_abaixo = base_regiao %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_regiao_abaixo = merge(base_regiao_abaixo, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_regiao_abaixo,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam_med_geral=svytotal(~Total, desenho_amostral1)

# Median of household expenses less than half the regional M/2
mediana_abaixo=svyquantile(~base_regiao_abaixo$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana_abaixo = base_regiao_abaixo %>% 
  mutate(valor_total = (mediana_abaixo[["base_regiao_abaixo$gasto_total"]][1]/2) - gasto_total)

med_total=mediana_abaixo[["base_regiao_abaixo$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana_abaixo,
    nest = TRUE
  )

media_dif_total=svymean(~base_mediana_abaixo$valor_total, desenho_amostral1)
ext_total_total=svytotal(~base_mediana_abaixo$valor_total, desenho_amostral1)

############# 1º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "1º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam1=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med1=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil1=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )

media_dif_d1=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d1=svytotal(~base_mediana$valor_total, desenho_amostral1)


############# 2º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "2º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam2=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med2=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil2=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d2=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d2=svytotal(~base_mediana$valor_total, desenho_amostral1)



############# 3º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "3º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam3=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med3=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil3=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d3=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d3=svytotal(~base_mediana$valor_total, desenho_amostral1)



############# 4º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "4º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam4=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med4=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil4=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d4=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d4=svytotal(~base_mediana$valor_total, desenho_amostral1)


############# 5º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "5º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam5=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med5=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil5=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d5=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d5=svytotal(~base_mediana$valor_total, desenho_amostral1)


############# 6º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "6º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam6=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med6=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil6=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d6=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d6=svytotal(~base_mediana$valor_total, desenho_amostral1)

############# 7º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "7º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam7=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med7=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil7=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d7=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d7=svytotal(~base_mediana$valor_total, desenho_amostral1)

############# 8º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "8º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam8=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med8=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil8=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d8=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d8=svytotal(~base_mediana$valor_total, desenho_amostral1)

############# 9º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "9º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam9=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med9=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil9=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d9=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d9=svytotal(~base_mediana$valor_total, desenho_amostral1)


############# 10º Decile 

base_d1 = base_regiao %>% 
  filter(decil == "10º Decil")

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )

desenho_amostral1$variables$Total = 1
tot_fam10=svytotal(~Total, desenho_amostral1)

# Household with expenses lower than the M/2
base_d1 = base_d1 %>%  
  filter(gasto_total < (mediana_regiao[["base_regiao$gasto_total"]][1]/2))

base_d1 = merge(base_d1, post_stratification_df)

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_d1,
    nest = TRUE
  )
desenho_amostral1$variables$Total = 1
tot_fam_med10=svytotal(~Total, desenho_amostral1)

# Decile median
mediana_decil=svyquantile(~base_d1$gasto_total, desenho_amostral1, quantiles = 0.5)

base_mediana = base_d1 %>% 
  mutate(valor_total = (mediana_decil[["base_d1$gasto_total"]][1]/2) - gasto_total)

med_decil10=mediana_decil[["base_d1$gasto_total"]][1]/2

desenho_amostral1 <- 
  svydesign(
    id = ~ cod_upa , 
    strata = ~ estrato_pof ,
    weights = ~ peso ,
    data = base_mediana,
    nest = TRUE
  )
media_dif_d10=svymean(~base_mediana$valor_total, desenho_amostral1)
ext_total_d10=svytotal(~base_mediana$valor_total, desenho_amostral1)

### Saving:


# household size in decile

tot_fam_decil=c(tot_fam1[1],
                tot_fam2[1],
                tot_fam3[1],
                tot_fam4[1],
                tot_fam5[1],
                tot_fam6[1],
                tot_fam7[1],
                tot_fam8[1],
                tot_fam9[1],
                tot_fam10[1], 
                tot_fam_geral[1])

# Number of households below the M/2

tot_fam_abaixo_decil=c(tot_fam_med1[1],
                       tot_fam_med2[1],
                       tot_fam_med3[1],
                       tot_fam_med4[1],
                       tot_fam_med5[1],
                       tot_fam_med6[1],
                       tot_fam_med7[1],
                       tot_fam_med8[1],
                       tot_fam_med9[1],
                       tot_fam_med10[1],
                       tot_fam_med_geral[1])

# M/2

valor_metade=c(med_decil1,
                       med_decil2,
                       med_decil3,
                       med_decil4,
                       med_decil5,
                       med_decil6,
                       med_decil7,
                       med_decil8,
                       med_decil9,
                       med_decil10,
                       med_total)


# Average difference value

media_diferenca=c(media_dif_d1[1],
            media_dif_d2[1],
            media_dif_d3[1],
            media_dif_d4[1],
            media_dif_d5[1],
            media_dif_d6[1],
            media_dif_d7[1],
            media_dif_d8[1],
            media_dif_d9[1],
            media_dif_d10[1],
            media_dif_total[1])

# Value

ext_total=c(ext_total_d1[1],
            ext_total_d2[1],
            ext_total_d3[1],
            ext_total_d4[1],
            ext_total_d5[1],
            ext_total_d6[1],
            ext_total_d7[1],
            ext_total_d8[1],
            ext_total_d9[1],
            ext_total_d10[1],
            ext_total_total[1])

# Change to your folder on your computer
setwd("C:/Users/55219/Meu Drive/DOUTORADO PPE UFRJ/Transport Research Part D/GITHUB")

# Package to save in excel
#install.packages("openxlsx")
library(openxlsx)

# Create a new workbook
wb <- createWorkbook()
# Add multiple sheets with different results
addWorksheet(wb, "Resultado_1")
writeData(wb, "Resultado_1", tot_fam_decil)

addWorksheet(wb, "Resultado_2")
writeData(wb, "Resultado_2", tot_fam_abaixo_decil)

addWorksheet(wb, "Resultado_3")
writeData(wb, "Resultado_3", valor_metade)

addWorksheet(wb, "Resultado_4")
writeData(wb, "Resultado_4", media_diferenca)

addWorksheet(wb, "Resultado_5")
writeData(wb, "Resultado_5", ext_total)

# Save multiple sheets with different results into a single file
saveWorkbook(wb, "resultados_analiseRegisoesmedianaregioesurbano.xlsx", overwrite = TRUE)

